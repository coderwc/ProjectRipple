const express = require('express');
const cors = require('cors');
const OpenAI = require('openai');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 5000;

// Initialize OpenAI
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

// Middleware
app.use(cors({
  origin: ['http://localhost:3000', 'http://localhost:3001', 'http://127.0.0.1:3000'],
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization', 'Accept'],
  optionsSuccessStatus: 200
}));
app.use(express.json());

// Handle preflight requests
app.options('*', cors());

// Root endpoint
app.get('/', (req, res) => {
  res.json({ 
    message: 'Charity Relief AI Backend is running!',
    endpoints: [
      'GET /api/test',
      'POST /api/ai-recommendation'
    ]
  });
});

// Test endpoint - MAKE SURE THIS EXISTS
app.get('/api/test', (req, res) => {
  res.json({ message: 'Backend server is running!' });
});

// AI recommendation endpoint
app.post('/api/ai-recommendation', async (req, res) => {
  // ... your existing AI code
});

app.listen(PORT, () => {
  console.log(`ðŸš€ Server running on http://localhost:${PORT}`);
  console.log(`ðŸ“¡ API endpoints available:`);
  console.log(`   - GET  /`);
  console.log(`   - GET  /api/test`);
  console.log(`   - POST /api/ai-recommendation`);
});